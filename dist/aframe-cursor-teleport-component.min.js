!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var n in s)("object"==typeof exports?exports:e)[n]=s[n]}}(this,(function(){return function(e){var t={};function s(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(n,o,function(t){return e[t]}.bind(null,o));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cursor-teleport",{schema:{cameraHead:{type:"string",default:""},cameraRig:{type:"string",default:""},collisionEntities:{type:"string",default:""},ignoreEntities:{type:"string",default:""},landingMaxAngle:{default:"45",min:0,max:360},landingNormal:{type:"vec3",default:"0 1 0"}},init:function(){thisCam=this,thisCam.mobile=AFRAME.utils.device.isMobile(),thisCam.scene=this.el.sceneEl,thisCam.canvas=thisCam.scene.renderer.domElement,document.querySelector(this.data.cameraHead).object3D.traverse((function(e){e instanceof THREE.Camera&&(thisCam.cam=e)})),thisCam.camPos=new THREE.Vector3,thisCam.camRig=document.querySelector(this.data.cameraRig).object3D,thisCam.camPos=thisCam.camRig.position,thisCam.rayCaster=new THREE.Raycaster,thisCam.referenceNormal=new THREE.Vector3,thisCam.rayCastObjects=[],thisCam.referenceNormal.copy(this.data.landingNormal);var e=new THREE.RingGeometry(.25,.3,32,1);e.rotateX(-Math.PI/2),e.translate(0,.02,0);var t=new THREE.MeshBasicMaterial;function s(e,t){var s=e.getBoundingClientRect();return null!=t.clientX?{x:t.clientX-s.left,y:t.clientY-s.top}:null!=t.touches[0]?{x:t.touches[0].clientX-s.left,y:t.touches[0].clientY-s.top}:void 0}function n(e){var t=s(thisCam.canvas,e);thisCam.mouseX=t.x,thisCam.mouseY=t.y}function o(e){thisCam.updateRaycastObjects();var t=s(thisCam.canvas,e);thisCam.mouseX=t.x,thisCam.mouseY=t.y,thisCam.mouseXOrig=t.x,thisCam.mouseYOrig=t.y}function a(e){if(thisCam.mouseX==thisCam.mouseXOrig&&thisCam.mouseY==thisCam.mouseYOrig){var t=thisCam.getTeleportPosition(thisCam.mouseX,thisCam.mouseY);t&&(thisCam.teleportIndicator.position.x=t.x,thisCam.teleportIndicator.position.y=t.y,thisCam.teleportIndicator.position.z=t.z,thisCam.transition(t))}}thisCam.teleportIndicator=new THREE.Mesh(e,t),thisCam.scene.object3D.add(thisCam.teleportIndicator),thisCam.transitioning=!1,thisCam.transitionProgress=0,thisCam.transitionSpeed=.01,thisCam.transitionCamPosStart=new THREE.Vector3,thisCam.transitionCamPosEnd=new THREE.Vector3,thisCam.updateRaycastObjects=function(){if(thisCam.rayCastObjects=[],""!=this.data.collisionEntities){thisCam.scene.querySelectorAll(this.data.collisionEntities).forEach(e=>{e.object3D.traverse((function(e){e instanceof THREE.Mesh&&(e.userData.collision=!0,thisCam.rayCastObjects.push(e))}))})}else{var e=new THREE.PlaneGeometry(50,50,1);e.rotateX(-Math.PI/2);var t=new THREE.MeshNormalMaterial,s=new THREE.Mesh(e,t);s.userData.collision=!0,thisCam.rayCastObjects.push(s)}""!=this.data.ignoreEntities&&thisCam.scene.querySelectorAll(this.data.ignoreEntities).forEach(e=>{e.object3D.traverse((function(e){e instanceof THREE.Mesh&&thisCam.rayCastObjects.push(e)}))})},thisCam.getTeleportPosition=function(e,t){if(0!=thisCam.rayCastObjects.length){if(thisCam.hasOwnProperty("cam")&&thisCam.hasOwnProperty("canvas")){var s=thisCam.cam,n=thisCam.canvas.getBoundingClientRect(),o=new THREE.Vector2;o.x=e/(n.right-n.left)*2-1,o.y=-t/(n.bottom-n.top)*2+1,thisCam.rayCaster.setFromCamera(o,s);var a=thisCam.rayCaster.intersectObjects(thisCam.rayCastObjects);return!(0==a.length||!thisCam.isValidNormalsAngle(a[0].face.normal))&&(1==a[0].object.userData.collision&&a[0].point)}return!1}return!1},thisCam.isValidNormalsAngle=function(e){var t=thisCam.referenceNormal.angleTo(e);return THREE.Math.RAD2DEG*t<=this.data.landingMaxAngle},thisCam.transition=function(e){thisCam.transitionProgress=0,thisCam.transitionCamPosEnd.x=e.x,thisCam.transitionCamPosEnd.y=e.y,thisCam.transitionCamPosEnd.z=e.z,thisCam.transitionCamPosStart.x=thisCam.camPos.x,thisCam.transitionCamPosStart.y=thisCam.camPos.y,thisCam.transitionCamPosStart.z=thisCam.camPos.z,thisCam.transitioning=!0},thisCam.updateRaycastObjects(),thisCam.canvas.addEventListener("mousedown",o,!1),thisCam.canvas.addEventListener("mousemove",n,!1),thisCam.canvas.addEventListener("mouseup",a,!1),thisCam.canvas.addEventListener("touchstart",o,!1),thisCam.canvas.addEventListener("touchmove",n,!1),thisCam.canvas.addEventListener("touchend",a,!1),thisCam.easeInOutQuad=function(e){return e<.5?2*e*e:(4-2*e)*e-1}},tick:function(){if(!thisCam.transitioning&&!thisCam.mobile){var e=thisCam.getTeleportPosition(thisCam.mouseX,thisCam.mouseY);!thisCam.mobile&&e&&(thisCam.teleportIndicator.position.x=e.x,thisCam.teleportIndicator.position.y=e.y,thisCam.teleportIndicator.position.z=e.z)}thisCam.transitioning&&(thisCam.transitionProgress+=thisCam.transitionSpeed,thisCam.camPos.x=thisCam.transitionCamPosStart.x+(thisCam.transitionCamPosEnd.x-thisCam.transitionCamPosStart.x)*thisCam.easeInOutQuad(thisCam.transitionProgress),thisCam.camPos.y=thisCam.transitionCamPosStart.y+(thisCam.transitionCamPosEnd.y-thisCam.transitionCamPosStart.y)*thisCam.easeInOutQuad(thisCam.transitionProgress),thisCam.camPos.z=thisCam.transitionCamPosStart.z+(thisCam.transitionCamPosEnd.z-thisCam.transitionCamPosStart.z)*thisCam.easeInOutQuad(thisCam.transitionProgress),thisCam.transitionProgress>=1&&(thisCam.transitioning=!1))}})}])}));
