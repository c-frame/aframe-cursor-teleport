!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(this,(function(){return function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cursor-teleport",{schema:{cameraHead:{type:"string",default:""},cameraRig:{type:"string",default:""},collisionEntities:{type:"string",default:""},ignoreEntities:{type:"string",default:""},landingMaxAngle:{default:"45",min:0,max:360},landingNormal:{type:"vec3",default:"0 1 0"}},init:function(){console.log("Fixed self"),teleporter=this,teleporter.mobile=AFRAME.utils.device.isMobile(),teleporter.scene=this.el.sceneEl,teleporter.canvas=teleporter.scene.renderer.domElement,document.querySelector(this.data.cameraHead).object3D.traverse((function(e){e instanceof THREE.Camera&&(teleporter.cam=e)})),teleporter.camPos=new THREE.Vector3,teleporter.camRig=document.querySelector(this.data.cameraRig).object3D,teleporter.camPos=teleporter.camRig.position,teleporter.rayCaster=new THREE.Raycaster,teleporter.referenceNormal=new THREE.Vector3,teleporter.rayCastObjects=[],teleporter.referenceNormal.copy(this.data.landingNormal);var e=new THREE.RingGeometry(.25,.3,32,1);e.rotateX(-Math.PI/2),e.translate(0,.02,0);var t=new THREE.MeshBasicMaterial;function r(e,t){var r=e.getBoundingClientRect();return null!=t.clientX?{x:t.clientX-r.left,y:t.clientY-r.top}:null!=t.touches[0]?{x:t.touches[0].clientX-r.left,y:t.touches[0].clientY-r.top}:void 0}function o(e){var t=r(teleporter.canvas,e);teleporter.mouseX=t.x,teleporter.mouseY=t.y}function n(e){teleporter.updateRaycastObjects();var t=r(teleporter.canvas,e);teleporter.mouseX=t.x,teleporter.mouseY=t.y,teleporter.mouseXOrig=t.x,teleporter.mouseYOrig=t.y}function a(e){if(teleporter.mouseX==teleporter.mouseXOrig&&teleporter.mouseY==teleporter.mouseYOrig){var t=teleporter.getTeleportPosition(teleporter.mouseX,teleporter.mouseY);t&&(teleporter.teleportIndicator.position.x=t.x,teleporter.teleportIndicator.position.y=t.y,teleporter.teleportIndicator.position.z=t.z,teleporter.transition(t))}}teleporter.teleportIndicator=new THREE.Mesh(e,t),teleporter.scene.object3D.add(teleporter.teleportIndicator),teleporter.transitioning=!1,teleporter.transitionProgress=0,teleporter.transitionSpeed=.01,teleporter.transitionCamPosStart=new THREE.Vector3,teleporter.transitionCamPosEnd=new THREE.Vector3,teleporter.updateRaycastObjects=function(){if(teleporter.rayCastObjects=[],""!=this.data.collisionEntities){teleporter.scene.querySelectorAll(this.data.collisionEntities).forEach(e=>{e.object3D.traverse((function(e){e instanceof THREE.Mesh&&(e.userData.collision=!0,teleporter.rayCastObjects.push(e))}))})}else{var e=new THREE.PlaneGeometry(50,50,1);e.rotateX(-Math.PI/2);var t=new THREE.MeshNormalMaterial,r=new THREE.Mesh(e,t);r.userData.collision=!0,teleporter.rayCastObjects.push(r)}""!=this.data.ignoreEntities&&teleporter.scene.querySelectorAll(this.data.ignoreEntities).forEach(e=>{e.object3D.traverse((function(e){e instanceof THREE.Mesh&&teleporter.rayCastObjects.push(e)}))})},teleporter.getTeleportPosition=function(e,t){if(0!=teleporter.rayCastObjects.length){if(teleporter.hasOwnProperty("cam")&&teleporter.hasOwnProperty("canvas")){var r=teleporter.cam,o=teleporter.canvas.getBoundingClientRect(),n=new THREE.Vector2;n.x=e/(o.right-o.left)*2-1,n.y=-t/(o.bottom-o.top)*2+1,teleporter.rayCaster.setFromCamera(n,r);var a=teleporter.rayCaster.intersectObjects(teleporter.rayCastObjects);return!(0==a.length||!teleporter.isValidNormalsAngle(a[0].face.normal))&&(1==a[0].object.userData.collision&&a[0].point)}return!1}return!1},teleporter.isValidNormalsAngle=function(e){var t=teleporter.referenceNormal.angleTo(e);return THREE.Math.RAD2DEG*t<=this.data.landingMaxAngle},teleporter.transition=function(e){teleporter.transitionProgress=0,teleporter.transitionCamPosEnd.x=e.x,teleporter.transitionCamPosEnd.y=e.y,teleporter.transitionCamPosEnd.z=e.z,teleporter.transitionCamPosStart.x=teleporter.camPos.x,teleporter.transitionCamPosStart.y=teleporter.camPos.y,teleporter.transitionCamPosStart.z=teleporter.camPos.z,teleporter.transitioning=!0},teleporter.updateRaycastObjects(),teleporter.canvas.addEventListener("mousedown",n,!1),teleporter.canvas.addEventListener("mousemove",o,!1),teleporter.canvas.addEventListener("mouseup",a,!1),teleporter.canvas.addEventListener("touchstart",n,!1),teleporter.canvas.addEventListener("touchmove",o,!1),teleporter.canvas.addEventListener("touchend",a,!1),teleporter.easeInOutQuad=function(e){return e<.5?2*e*e:(4-2*e)*e-1}},tick:function(){if(!teleporter.transitioning&&!teleporter.mobile){var e=teleporter.getTeleportPosition(teleporter.mouseX,teleporter.mouseY);!teleporter.mobile&&e&&(teleporter.teleportIndicator.position.x=e.x,teleporter.teleportIndicator.position.y=e.y,teleporter.teleportIndicator.position.z=e.z)}teleporter.transitioning&&(teleporter.transitionProgress+=teleporter.transitionSpeed,teleporter.camPos.x=teleporter.transitionCamPosStart.x+(teleporter.transitionCamPosEnd.x-teleporter.transitionCamPosStart.x)*teleporter.easeInOutQuad(teleporter.transitionProgress),teleporter.camPos.y=teleporter.transitionCamPosStart.y+(teleporter.transitionCamPosEnd.y-teleporter.transitionCamPosStart.y)*teleporter.easeInOutQuad(teleporter.transitionProgress),teleporter.camPos.z=teleporter.transitionCamPosStart.z+(teleporter.transitionCamPosEnd.z-teleporter.transitionCamPosStart.z)*teleporter.easeInOutQuad(teleporter.transitionProgress),teleporter.transitionProgress>=1&&(teleporter.transitioning=!1))}})}])}));